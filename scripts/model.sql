-- MySQL Script generated by MySQL Workbench
-- Sun May 30 01:10:24 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema blackwidow
-- -----------------------------------------------------
#DROP SCHEMA IF EXISTS `blackwidow` ;

-- -----------------------------------------------------
-- Schema blackwidow
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `blackwidow` DEFAULT CHARACTER SET utf8 ;
USE `blackwidow` ;

-- -----------------------------------------------------
-- Table `blackwidow`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blackwidow`.`users` ;

CREATE TABLE IF NOT EXISTS `blackwidow`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT NOW(),
  `disabled_at` TIMESTAMP NULL,
  `enabled` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blackwidow`.`credentials`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blackwidow`.`credentials` ;

CREATE TABLE IF NOT EXISTS `blackwidow`.`credentials` (
  `credential_id` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(100) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT NOW(),
  `disabled_at` TIMESTAMP NULL,
  `enabled` TINYINT NOT NULL DEFAULT 1,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`credential_id`),
  INDEX `fk_credentials_users_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_credentials_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `blackwidow`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blackwidow`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blackwidow`.`roles` ;

CREATE TABLE IF NOT EXISTS `blackwidow`.`roles` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT NOW(),
  `disabled_at` TIMESTAMP NULL,
  `enabled` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`role_id`),
  UNIQUE INDEX `role_UNIQUE` (`role` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blackwidow`.`users_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blackwidow`.`users_roles` ;

CREATE TABLE IF NOT EXISTS `blackwidow`.`users_roles` (
  `role_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT NOW(),
  `disabled_at` TIMESTAMP NULL,
  `enabled` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`role_id`, `user_id`),
  INDEX `fk_roles_has_users_users1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_roles_has_users_roles1_idx` (`role_id` ASC) VISIBLE,
  CONSTRAINT `fk_roles_has_users_roles1`
    FOREIGN KEY (`role_id`)
    REFERENCES `blackwidow`.`roles` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_roles_has_users_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blackwidow`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blackwidow`.`persons_data`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blackwidow`.`persons_data` ;

CREATE TABLE IF NOT EXISTS `blackwidow`.`persons_data` (
  `persons_data_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `birth_date` TIMESTAMP NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT NOW(),
  `updated_at` TIMESTAMP NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`persons_data_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_persons_data_users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_persons_data_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blackwidow`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blackwidow`.`cat_config`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blackwidow`.`cat_config` ;

CREATE TABLE IF NOT EXISTS `blackwidow`.`cat_config` (
  `cat_config_id` INT NOT NULL AUTO_INCREMENT,
  `config_key` VARCHAR(45) NOT NULL,
  `description_key` VARCHAR(45) NULL,
  `created_at` TIMESTAMP NULL,
  PRIMARY KEY (`cat_config_id`),
  UNIQUE INDEX `config_tag_UNIQUE` (`config_key` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blackwidow`.`system_config`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `blackwidow`.`system_config` ;

CREATE TABLE IF NOT EXISTS `blackwidow`.`system_config` (
  `system_config_id` INT NOT NULL AUTO_INCREMENT,
  `config_value` VARCHAR(100) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT NOW(),
  `disabled_at` TIMESTAMP NULL,
  `enabled` TINYINT NOT NULL DEFAULT 1,
  `cat_config_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`system_config_id`),
  INDEX `fk_system_config_cat_config1_idx` (`cat_config_id` ASC) VISIBLE,
  INDEX `fk_system_config_users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_system_config_cat_config1`
    FOREIGN KEY (`cat_config_id`)
    REFERENCES `blackwidow`.`cat_config` (`cat_config_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_system_config_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `blackwidow`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
